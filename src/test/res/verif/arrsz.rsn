
fn max(a: Int, b: Int) -> Int {
    return when a < b then b else a
}

fn min(a: Int, b: Int) -> Int {
    return when a > b then b else a
}

fn maxAtIndex(a: arr Int, b: arr Int, idx: Int) -> Int require 0 <= idx && idx < min(#a, #b) {
    return max(a[idx], b[idx])
}

fn main(args: arr Int){

    val a = [11, -5, 14, 21, 27];
    assert #a == 5;

    val b = arr Int[27];
    assert #b == 27;

    // assert a != b;

    a[4];
    // a[5];

}
